'''
문제
테트리미노가 놓인 칸에 쓰여 있는 수들의 합을 최대로 하는 프로그램을 작성해라
테트리미노 개수
1번 - 2개 (1회전)
2번 - 1개
3번 - 8개 (3회전 / 1대칭)
4번 - 4개 (1회전 / 1대칭)
5번 - 4개 (3회전)

테트리미노의 개수는 총 19개.

500 * 500 * 19 < 1억 -> 브루트포스 가능
'''
import sys

tetrominos = [
    [(0, 0), (0, 1), (1, 0), (1, 1)],
    [(0, 0), (0, 1), (0, 2), (0, 3)],
    [(0, 0), (1, 0), (2, 0), (3, 0)],
    [(0, 0), (0, 1), (0, 2), (1, 0)],
    [(1, 0), (1, 1), (1, 2), (0, 2)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 2)],
    [(0, 0), (1, 0), (2, 0), (2, 1)],
    [(2, 0), (2, 1), (1, 1), (0, 1)],
    [(0, 0), (0, 1), (1, 0), (2, 0)],
    [(0, 0), (0, 1), (1, 1), (2, 1)],
    [(0, 0), (0, 1), (0, 2), (1, 1)],
    [(1, 0), (1, 1), (1, 2), (0, 1)],
    [(0, 0), (1, 0), (2, 0), (1, 1)],
    [(1, 0), (0, 1), (1, 1), (2, 1)],
    [(1, 0), (2, 0), (0, 1), (1, 1)],
    [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(1, 0), (0, 1), (1, 1), (0, 2)],
    [(0, 0), (0, 1), (1, 1), (1, 2)]
]

N, M = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(N)]


def is_valid(y: int, x: int) -> bool:
    return 0 <= y < N and 0 <= x < M


def func(y: int, x: int) -> None:
    res = 0
    for tetromino in tetrominos:
        acc = 0
        for dy, dx in tetromino:
            if not is_valid(y+dy, x+dx):
                break
            acc += board[y+dy][x+dx]
        else:
            res = max(res, acc)
    return res


result = -sys.maxsize
for y in range(N):
    for x in range(M):
        result = max(result, func(y, x))

print(result)

